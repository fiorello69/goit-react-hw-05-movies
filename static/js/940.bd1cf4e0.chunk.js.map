{"version":3,"file":"static/js/940.bd1cf4e0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/common/ErrorAlert/ErrorAlert.module.css?5ee0","components/common/ErrorAlert/ErrorAlert.jsx","webpack://react-homework-template/./src/components/common/Loader/Loader.module.css?8b04","components/common/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MovieDetails/components/Cast/CastCard.module.css?05d8","pages/MovieDetails/components/Cast/castCard.jsx","pages/MovieDetails/components/Cast/Cast.jsx","service/moviesService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Error\":\"ErrorAlert_Error__rwsaJ\"};","import PropTypes from 'prop-types';\nimport styles from './ErrorAlert.module.css';\n\nconst ErrorAlert = ({ error }) => {\n  return <p className={styles.Error}>{error}</p>;\n};\n\nErrorAlert.propTypes = {\n  error: PropTypes.string.isRequired,\n};\n\nexport default ErrorAlert;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__WEzse\"};","import { ThreeDots } from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      color=\"#4fa94d\"\n      radius=\"9\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperClass={styles.loader}\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"CastCard_castList__KIYHL\",\"castCard\":\"CastCard_castCard__nZSBf\",\"castInfo\":\"CastCard_castInfo__QtVeT\"};","import PropTypes from 'prop-types';\nimport styles from './CastCard.module.css';\n\nconst CastCard = ({ castData }) => {\n  const Base_Image_Url = 'https://image.tmdb.org/t/p/w342';\n  const Fallback_Image_url =\n    'https://media.istockphoto.com/vectors/no-image-available-icon-vector-id1216251206?k=20&m=1216251206&s=170667a&w=0&h=A72dFkHkDdSfmT6iWl6eMN9t_JZmqGeMoAycP-LMAw4=';\n\n  return (\n    <div className={styles.castList}>\n      {castData.map(item => (\n        <div key={item.id} className={styles.castCard}>\n          <div>\n            <img\n              src={\n                item?.profile_path\n                  ? `${Base_Image_Url}${item.profile_path}`\n                  : `${Fallback_Image_url}`\n              }\n              alt=\"character-poster\"\n            />\n          </div>\n          <div className={styles.castInfo}>\n            <div>\n              <p>Character:</p>\n              <p>{item.character || 'missing'}</p>\n            </div>\n            <div>\n              <p>Name:</p>\n              <p>{item.name}</p>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nCastCard.propTypes = {\n  castData: PropTypes.array.isRequired,\n};\n\nexport default CastCard;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moviesService from 'service/moviesService';\nimport CastCard from './castCard';\nimport ErrorAlert from 'components/common/ErrorAlert/ErrorAlert';\nimport Loader from 'components/common/Loader/Loader';\n\nconst Cast = () => {\n  const [castData, setCastData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        setIsLoading(true);\n        const data = await moviesService.getMovieCredits(movieId);\n\n        if (data.cast.length === 0) {\n          setError(`We are sorry. There is no details about the cast`);\n          return;\n        }\n\n        const castData = data.cast.splice(0, 18);\n\n        setCastData(castData);\n      } catch (error) {\n        setError(error.response.data.status_message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getCast();\n  }, [movieId]);\n\n  return (\n    <section className=\"container\">\n      {castData && <CastCard castData={castData} />}\n      {error && <ErrorAlert error={error} />}\n      {isLoading && <Loader />}\n    </section>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '051a3d8a53317eb2948f5da4b81e4296';\n\nconst getTrending = async () => {\n  const ENDPOINT = '/trending/movie/day';\n  const response = await axios.get(`${ENDPOINT}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nconst getSearchedMovies = async searchedQuery => {\n  const ENDPOINT = `/search/movie?query=${searchedQuery}`;\n  const response = await axios.get(`${ENDPOINT}&api_key=${API_KEY}`);\n  return response.data;\n};\n\nconst getMovieDetails = async movieId => {\n  const ENDPOINT = `/movie/${movieId}`;\n  const response = await axios.get(`${ENDPOINT}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nconst getMovieCredits = async movieId => {\n  const ENDPOINT = `/movie/${movieId}/credits`;\n  const response = await axios.get(`${ENDPOINT}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nconst getMovieReviews = async movieId => {\n  const ENDPOINT = `/movie/${movieId}/reviews`;\n  const response = await axios.get(`${ENDPOINT}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nconst moviesService = {\n  getTrending,\n  getSearchedMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default moviesService;\n"],"names":["_ref","error","_jsx","className","styles","children","Loader","ThreeDots","visible","height","width","color","radius","ariaLabel","wrapperClass","castData","map","item","_jsxs","src","profile_path","concat","alt","character","name","id","Cast","setCastData","useState","setError","isLoading","setIsLoading","movieId","useParams","useEffect","async","data","moviesService","getMovieCredits","cast","length","splice","response","status_message","getCast","CastCard","ErrorAlert","axios","defaults","baseURL","API_KEY","getTrending","get","getSearchedMovies","ENDPOINT","searchedQuery","getMovieDetails","getMovieReviews"],"sourceRoot":""}